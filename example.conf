server {
        root /var/www/html;

        # Agregamos el index.php para poder usar PHP
        index index.php index.html index.htm index.nginx-debian.html;

        #Agregue el nombre del dominio que se va a utilizar para acceder al servidor
        server_name su.dominio;

        #Bloque dedicado a manejar las solictudes a la raiz del servidor.
        #Intenta servir el archivo directamente ($uri). Si no existe, intenta servirlo como directorio ($uri/). Si no existe, devuelve un error 404.
        location / {
                try_files $uri $uri/ =404;
        }

        # Ejecución de CGI para ZoneMinder
        # alias /usr/lib/zoneminder/cgi-bin; -> permite ejecutar los scripts CGI
        # auth_basic off; -> desactiva la autenticación básica
        # fastcgi_pass unix:/run/fcgiwrap.socket; -> usa FastCGI para ejecutar CGI a través de fcgiwrap
        location /cgi-bin {
                auth_basic off;
                alias /usr/lib/zoneminder/cgi-bin;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $request_filename;
                fastcgi_param HTTP_PROXY "";
                fastcgi_pass unix:/run/fcgiwrap.socket;

                # Permitir acceso
                allow all;
        }

        #Cache de ZoneMinder
        location /zm/cache { 
                auth_basic off;
                alias /var/cache/zoneminder; #mapea /zm/cache a /var/cache/zoneminder
        }

        #API de zoneminder (archivos estáticos)
        #Maneja archivos estáticos (css, imagenes, iconos) de la API de ZoneMinder
        location ~ /zm/api/(css|img|ico) {
                auth_basic off;
                rewrite ^/zm/api(.+)$ /api/app/webroot/$1 break; #rescribe la URL para que los archivos estáticos se sirvan desde /api/app/webroot
                try_files $uri $uri/ =404; #Intenta encontrar el archivo, si no existe, devuelve un error 404. 
        }
        
        #Interfaz principal de ZoneMinder
        location /zm {
                auth_basic off;
                alias /usr/share/zoneminder/www; #Sirve la interfaz de ZoneMinder desde /usr/share/zoneminder/www
                try_files $uri $uri/ /index.php?$args =404; #Intenta encontrar el archivo/directorio solicitado, si no existe, reenvía la petición a index.php con los argumentos de la URL ($args)
                
                #API de ZM
                location /zm/api {
                        auth_basic off;
                        rewrite ^/zm/api(.+)$ /zm/api/app/webroot/index.php?p=$1 last; #Reescribe la URL para que las peticiones a la API de ZM se manejen a través de index.php
                }

                #Ejecución de PHP en ZoneMinder
                location ~ \.php$ {
                        auth_basic off;
                        include fastcgi_params;
                        fastcgi_param SCRIPT_FILENAME $request_filename; #Define el archivo PHP a ejecutar 
                        fastcgi_param HTTP_PROXY "";
                        fastcgi_index index.php;
                        #Enruta la ejecución de PHP a través de PHP-FPM, que se comunica por un socket UNIX
                        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; #Modifique el phpx.x-fpm.sock de acuerdo a la versión de PHP con la que esté trabajando
        }

        }

        #Aquí se agregaran las lineas para la configuración de los SSL y HTTPS, se hará cargo el Certbot al momento de generar los certificados. 
        listen 443 ssl; 

        #Podemos configurar el servidor para que genere un log con los errores que vayan aparecido, para luego ir depurando.
        error_log /var/log/nginx/error.log error;
}

# Configuración del servidor para que escuche en el puerto 80 y redireccione al puerto 443
# Certbot se encargará de generar los certificados SSL y configurar el servidor para que escuche en el puerto 443, redirigiendo las peticiones del puerto 80 al puerto 443.
# Encontrará un código parecido al siguiente:
server {
    if ($host = su.dominio) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name su.dominio;
    return 404; # managed by Certbot
}